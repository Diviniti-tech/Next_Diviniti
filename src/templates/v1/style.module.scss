@keyframes pulse {
    0% {
      transform: scale(0.3);
      opacity: 0.3;
      -webkit-transform: scale(0.3);
      -moz-transform: scale(0.3);
      -ms-transform: scale(0.3);
      -o-transform: scale(0.3);
}
    50% {
      transform: scale(1);
      opacity: 1;
      -webkit-transform: scale(1);
      -moz-transform: scale(1);
      -ms-transform: scale(1);
      -o-transform: scale(1);
}
    100% {
      transform: scale(0.3);
      opacity: 0.3;
      -webkit-transform: scale(0.3);
      -moz-transform: scale(0.3);
      -ms-transform: scale(0.3);
      -o-transform: scale(0.3);
}
  }
  
 $pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
  $value: $base;
  @if $exp > 1 {
    @for $i from 2 through $exp {
      $value: $value * $base;
    }
  }
  @if $exp < 1 {
    @for $i from 0 through -$exp {
      $value: $value / $base;
    }
  }
  @return $value;
}

@function fact($num) {
  $fact: 1;
  @if $num > 0 {
    @for $i from 1 through $num {
      $fact: $fact * $i;
    }
  }
  @return $fact;
}

@function _to_unitless_rad($angle) {
  @if unit($angle) == 'deg' {
    $angle: $angle / 180deg * $pi;
  }
  @if unit($angle) == 'rad' {
    $angle: $angle / 1rad;
  }
  @return $angle;
}

@function sin($angle) {
  $a: _to_unitless_rad($angle);
  $sin: $a;
  @for $n from 1 through $_precision {
    $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1)) * pow($a, (2 * $n + 1));
  }
  @return $sin;
}

@function cos($angle) {
  $a: _to_unitless_rad($angle);
  $cos: 1;
  @for $n from 1 through $_precision {
    $cos: $cos + (pow(-1, $n) / fact(2 * $n)) * pow($a, 2 * $n);
  }
  @return $cos;
}

@function tan($angle) {
  @return sin($angle) / cos($angle);
}

@function reminder($origin, $mod) {
  $q: if(
    ($origin / $mod) > 0,
    floor($origin / $mod),
    ceil($origin / $mod)
  );
  @return $origin - ($mod * $q);
}

:local {
  .sky {
    width: 100vw;
    height: 100vh;
    background-color: black;
    position: relative;
    overflow: hidden;
  }

  .star {
    opacity: 0;
    position: absolute;
    background: white;
    box-shadow: 0px 0px 20px 0px rgb(255, 255, 255);
    border-radius: 100%;
    transform-origin: 0, 0;
    animation-timing-function: linear, linear !important;
    animation-iteration-count: infinite, infinite !important;
    animation-delay: -30s, -30s !important;
  }

  .size-1 {
    width: 1px;
    height: 1px;
  }

  .size-2 {
    width: 2px;
    height: 2px;
  }

  @for $i from 1 to 361 {
    $t: random(40000) + 5000;
    $angle: $i - reminder($i, 4);

    .axis-#{$i} {
      animation: anim#{$angle} #{$t}ms, fade#{random(10)} #{$t}ms;
    }
  }

  @for $i from 1 to 11 {
    $start: random(20);
    $end: $start + 10;
    @keyframes fade#{$i} {
      #{$start + '%'} {
        opacity: 0;
      }
      #{$end + '%'} {
        opacity: 1;
      }
      100% {
        opacity: 1;
      }
    }
  }

  @for $i from 1 to 91 {
    $a: $i * 4;
    @keyframes anim#{$a} {
      $angle: $pi * 2 * ($a / 360);
      $y: 80 * sin($angle);
      $x: 80 * cos($angle);
      100% {
        transform: translate(#{$x}vw, #{$y}vh);
      }
    }
  }
}


.v1Container{ 
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
.homeLogo2 {
    width: 10rem;
    height: auto;
    margin-bottom: 20px;
    animation: pulse infinite;
    -webkit-animation: pulse 12s infinite;
    position: absolute;

}

}